{"ast":null,"code":"import React from 'react';\nimport closeIcon from '../images/icon-cross.svg';\nimport PropTypes from 'prop-types';\n\nclass ResultBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: {},\n      todosForMap: {},\n      filter: 'all',\n      update: props.update\n    };\n    this.changeFilter = this.changeFilter.bind(this);\n    this.filter = this.filter.bind(this);\n  } // ComponentDidMount Lifecycle\n\n\n  componentDidMount() {\n    if (localStorage.getItem('todos')) {\n      this.setState({\n        todos: JSON.parse(localStorage.getItem('todos'))\n      }, this.filter);\n    } else {\n      this.filter();\n    }\n  } // Convert Array to Object\n\n\n  toObject(arr) {\n    var rv = {};\n\n    for (var i = 0; i < arr.length; ++i) rv[`${i}`] = arr[i];\n\n    return rv;\n  } // Filter Items (All, Active, Completed)\n\n\n  filter() {\n    if (this.state.filter === 'all') {\n      this.setState(state => ({\n        todosForMap: state.todos\n      }));\n    } else if (this.state.filter === 'active') {\n      this.setState(state => ({\n        todosForMap: this.toObject(Object.values(state.todos).filter(item => item.active === true))\n      }));\n    } else {\n      this.setState(state => ({\n        todosForMap: this.toObject(Object.values(state.todos).filter(item => item.active === false))\n      }));\n    }\n\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n  } // Change Filter Property of Items in order to Filter\n\n\n  changeFilter(toWhich) {\n    this.setState({\n      filter: toWhich\n    }, this.filter);\n  } // Delete Item Function\n\n\n  delete(text) {\n    Object.values(this.state.todos).forEach((item, index) => {\n      if (item.text === text) {\n        let myObject = this.toObject(Object.values(this.state.todos).filter(item => item.text !== text));\n        this.setState({\n          todos: myObject\n        }, this.filter);\n      }\n    });\n  } // Make Completed Function\n\n\n  makeCompleted(text) {\n    Object.values(this.state.todos).forEach((item, index) => {\n      if (item.text === text) {\n        Object.values(this.state.todos)[index].active = !Object.values(this.state.todos)[index].active;\n      }\n    });\n    this.setState({\n      todos: this.state.todos\n    }, this.filter);\n  } // Clear Completed\n\n\n  clearCompleted() {\n    let myArray = [];\n    Object.values(this.state.todos).forEach(item => {\n      if (item.active === true) {\n        myArray.push(item);\n      }\n    });\n    this.setState({\n      todos: this.toObject(myArray)\n    }, this.filter);\n  }\n\n  render() {\n    const {\n      todos,\n      todosForMap,\n      filter\n    } = this.state;\n    return c;\n  }\n\n}\n\nResultBody.propTypes = {\n  update: PropTypes.bool.isRequired\n};\nexport default ResultBody;","map":{"version":3,"sources":["C:/Asilbek/Asilbek/me/l/lessons/8. React.js/3. todo app/src/components/ResultBody.js"],"names":["React","closeIcon","PropTypes","ResultBody","Component","constructor","props","state","todos","todosForMap","filter","update","changeFilter","bind","componentDidMount","localStorage","getItem","setState","JSON","parse","toObject","arr","rv","i","length","Object","values","item","active","setItem","stringify","toWhich","delete","text","forEach","index","myObject","makeCompleted","clearCompleted","myArray","push","render","c","propTypes","bool","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport closeIcon from '../images/icon-cross.svg';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ResultBody extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            todos: {},\r\n            todosForMap: {},\r\n            filter: 'all',\r\n            update: props.update\r\n        };\r\n        this.changeFilter = this.changeFilter.bind(this);\r\n        this.filter = this.filter.bind(this);\r\n    }\r\n\r\n    // ComponentDidMount Lifecycle\r\n    componentDidMount() {\r\n        if (localStorage.getItem('todos')) {\r\n            this.setState({\r\n                todos: JSON.parse(localStorage.getItem('todos'))\r\n            }, this.filter)\r\n        } else {\r\n            this.filter()\r\n        }\r\n    }\r\n\r\n    // Convert Array to Object\r\n    toObject(arr) {\r\n        var rv = {};\r\n        for (var i = 0; i < arr.length; ++i)\r\n            rv[`${i}`] = arr[i];\r\n        return rv;\r\n    }\r\n\r\n    // Filter Items (All, Active, Completed)\r\n    filter() {\r\n        if (this.state.filter === 'all') {\r\n            this.setState((state) => ({\r\n                todosForMap: state.todos\r\n            }))\r\n        } else if (this.state.filter === 'active') {\r\n            this.setState((state) => ({\r\n                todosForMap: this.toObject(Object.values(state.todos).filter(item => item.active === true))\r\n            }))\r\n        } else {\r\n            this.setState((state) => ({\r\n                todosForMap: this.toObject(Object.values(state.todos).filter(item => item.active === false))\r\n            }))\r\n        }\r\n        localStorage.setItem('todos', JSON.stringify(this.state.todos))\r\n    }\r\n\r\n    // Change Filter Property of Items in order to Filter\r\n    changeFilter(toWhich) {\r\n        this.setState({\r\n            filter: toWhich\r\n        }, this.filter)\r\n    }\r\n\r\n    // Delete Item Function\r\n    delete(text) {\r\n        Object.values(this.state.todos).forEach((item, index) => {\r\n            if (item.text === text) {\r\n                let myObject = this.toObject(Object.values(this.state.todos).filter(item => item.text !== text))\r\n                this.setState({\r\n                    todos: myObject\r\n                }, this.filter)\r\n            }\r\n        })\r\n    }\r\n\r\n    // Make Completed Function\r\n    makeCompleted(text) {\r\n        Object.values(this.state.todos).forEach((item, index) => {\r\n            if (item.text === text) {\r\n                Object.values(this.state.todos)[index].active = !Object.values(this.state.todos)[index].active;\r\n            }\r\n        })\r\n        this.setState({\r\n            todos: this.state.todos\r\n        }, this.filter)\r\n    }\r\n\r\n    // Clear Completed\r\n    clearCompleted() {\r\n        let myArray = [];\r\n        Object.values(this.state.todos).forEach((item) => {\r\n            if (item.active === true) {\r\n                myArray.push(item)\r\n            }\r\n        })\r\n        this.setState({\r\n            todos: this.toObject(myArray)\r\n        }, this.filter)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { todos, todosForMap, filter } = this.state;\r\n        return (\r\n            c\r\n        );\r\n    }\r\n}\r\n\r\nResultBody.propTypes = {\r\n    update: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default ResultBody;\r\n"]},"metadata":{},"sourceType":"module"}